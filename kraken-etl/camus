#!/usr/bin/env python

""" Wrapper for launching Camus Kafka Importer

Usage: camus [options] <properties-file>

Options:
    -h --help                           Show this help message and exit.
    -N --job-name=<job-name>            Hadoop JobName. [default: Camus Job]
    -j --jar=<jar-file>                 Path to Camus .jar file.  [default: /srv/deployment/analytics/kraken/lib/camus.jar]
    -f --force                          If set, job will be submitted without checking if it is already running.
    -n --dry-run                        Prints command that would have been run without running it.
"""
__author__ = 'Andrew Otto <otto@wikimedia.org>'

import os
import sys
import logging
from docopt import docopt



logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s %(levelname)-6s %(message)s',
                    datefmt='%Y-%m-%dT%H:%M:%S')

def is_yarn_application_running(job_name):
    '''
    Returns true if job_name is found in the output
    of yarn application -list and has a status of
    RUNNING or ACCEPTED.  Returns false otherwise.

    Note:  Error checking on the yarn shell command is not good.
    This command will return false on any command failure.
    '''
    command = '/usr/bin/yarn application -list 2>/dev/null | grep -q  "\({0}\).*\(RUNNING\|ACCEPTED\)"'.format(job_name)
    logging.debug('Running: {0}'.format(command))

    retval = os.system(command)
    return retval == 0

if __name__ == '__main__':
    # parse arguments
    arguments = docopt(__doc__)

    jar             = arguments['--jar']
    job_name        = arguments['--job-name']
    properties_file = arguments['<properties-file>']

    if not arguments['--force'] and is_yarn_application_running(job_name):
        logging.warn('Not submitting camus job "{0}", it is currently running.'.format(job_name))
        sys.exit(1)

    command = '/usr/bin/hadoop jar {0} com.linkedin.camus.etl.kafka.CamusJob -P {1} -Dcamus.job.name="{2}"'.format(
        jar,
        properties_file,
        job_name
    )
    logging.info('Submitting camus job "{0}": {1}'.format(job_name, command))

    if not arguments['--dry-run']:
        sys.exit(os.system(command))
